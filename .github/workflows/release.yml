name: Release

permissions:
  contents: write
  packages: write
  # This is used to complete the identity challenge
  # with sigstore/fulcio when running outside of PRs.
  id-token: write
  
on:
  workflow_dispatch: 
  # release:
  #     types: [published]
  # push:
  #   branches:
  #     - main

env:
  REGISTRY: "ghcr.io"
  IMAGE_NAME: ${{ github.repository }}
  REGISTRY_USERNAME: ${{ github.actor }}
  REGISTRY_PASSWORD: ${{ secrets.GITHUB_TOKEN }}
  
jobs:
  release:
    name: Release
    permissions:
      contents: write
      pull-requests: write
    runs-on: ubuntu-latest
    steps:
          
      - name: Checkout repository
        uses: actions/checkout@v4

      # Install the cosign tool except on PR
      # https://github.com/sigstore/cosign-installer
      - name: Install cosign
        uses: sigstore/cosign-installer@v3.5.0
        with:
          cosign-release: 'v2.2.4'

      # Set up BuildKit Docker container builder to be able to build
      # multi-platform images and export cache
      # https://github.com/docker/setup-buildx-action
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.3.0 # v3.0.0

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@v3.2.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5.5.1
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        
      # - name: Release
      #   id: release
      #   uses: google-github-actions/release-please-action@v3
      #   with:
      #     release-type: go
      #     package-name: traefik-github-oauth-plugin

      - name: Setup Go
        # if: ${{ steps.release.outputs.release_created }}
        uses: actions/setup-go@v5
        with:
          go-version: 1.19

      - name: Set up QEMU
        # if: ${{ steps.release.outputs.release_created }}
        uses: docker/setup-qemu-action@v3.2.0

      - name: Go Release
        if: ${{ steps.release.outputs.release_created }}
        uses: goreleaser/goreleaser-action@v6.0.0
        env:
          GITHUB_TOKEN: ${{ github.token }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
        with:
          distribution: goreleaser
          version: latest
          args: release --clean

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v5.3.0
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          github-token: ${{ secrets.GITHUB_TOKEN }}

      # Sign the resulting Docker image digest except on PRs.
      # This will only write to the public Rekor transparency log when the Docker
      # repository is public to avoid leaking data.  If you would like to publish
      # transparency data even for private images, pass --force to cosign below.
      # https://github.com/sigstore/cosign
      - name: Sign the published Docker image
        if: ${{ github.event_name != 'pull_request' }}
        env:
          # https://docs.github.com/en/actions/security-guides/security-hardening-for-github-actions#using-an-intermediate-environment-variable
          TAGS: ${{ steps.meta.outputs.tags }}
          DIGEST: ${{ steps.build-and-push.outputs.digest }}
        # This step uses the identity token to provision an ephemeral certificate
        # against the sigstore community Fulcio instance.
        run: echo "${TAGS}" | xargs -I {} cosign sign --yes {}@${DIGEST}

      # - name: Go Release
      #   if: ${{ steps.release.outputs.release_created }}
      #   uses: goreleaser/goreleaser-action@v6.0.0
      #   env:
      #     GITHUB_TOKEN: ${{ github.token }}
      #     github-token: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     distribution: goreleaser
      #     version: latest
      #     args: release --clean

      # - name: Replace The Relative Path In The README.md
      #   if: ${{ steps.release.outputs.release_created }}
      #   run: |
      #     sed -E 's#(\[[^]]*\])\(\.\/([^)]+)\)#\1(https://github.com/${{ github.repository }}/raw/${{ steps.release.outputs.tag_name }}/\2)#g' README.md > docker.README.md

      # - name: Update Docker Images Description
      #   if: ${{ steps.release.outputs.release_created }}
      #   uses: peter-evans/dockerhub-description@v3
      #   with:
      #     username: ${{ secrets.DOCKERHUB_USERNAME }}
      #     password: ${{ secrets.DOCKERHUB_TOKEN }}
      #     repository: tanincard/traefik-github-oauth-server
      #     short-description: server for traefik-github-oauth-plugin
      #     readme-filepath: docker.README.md
      # endregion Docker
